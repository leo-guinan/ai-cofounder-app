name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggers

jobs:
  deploy:
    name: Deploy to Hetzner
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_PORT || 22 }}
          script: |
            set -e
            
            echo "üöÄ Starting deployment..."
            
            # Navigate to deployment directory
            cd /opt/ai-cofounder
            
            # Reset any local changes and pull latest
            echo "üì• Pulling latest code from main..."
            git reset --hard HEAD
            git clean -fd
            git pull origin main
            
            # Rebuild and restart services
            echo "üî® Rebuilding Docker images..."
            docker compose -f docker-compose.prod.yml build --no-cache
            
            echo "‚ôªÔ∏è  Restarting services..."
            docker compose -f docker-compose.prod.yml up -d
            
            # Clean up old images
            echo "üßπ Cleaning up old Docker images..."
            docker image prune -f
            
            # Show status
            echo "‚úÖ Deployment complete! Container status:"
            docker compose -f docker-compose.prod.yml ps
            
            echo "üìä Service health:"
            docker compose -f docker-compose.prod.yml logs --tail=20

      - name: Notify on failure
        if: failure()
        run: |
          echo "::error::Deployment failed! Check the logs above for details."

